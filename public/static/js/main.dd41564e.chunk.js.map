{"version":3,"sources":["components/SignInForm.js","components/SignIn.js","components/SignOutButton.js","components/SignUpForm.js","components/SignUp.js","components/DeleteUser.js","components/EditUserForm.js","components/EditUser.js","components/Navbar.js","components/ListSelect.js","components/UsersTable.js","components/InfoSnackbar.js","components/RemoveBookFromList.js","components/ListTable.js","components/AddRating.js","components/CreateBookForm.js","components/CreateBook.js","components/AddBookToList.js","components/AllBooksTable.js","components/Data.js","components/Warning.js","App.js","index.js"],"names":["SignInForm","_ref","open","handleClose","signIn","error","_React$useState","React","useState","_React$useState2","Object","slicedToArray","username","setUsername","_React$useState3","_React$useState4","password","setPassword","handleSignin","variables","e","message","split","length","react_default","a","createElement","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","style","color","margin","padding","InputLabel","htmlFor","shrink","OutlinedInput","marginBottom","autoFocus","name","type","value","fullWidth","required","autoComplete","onChange","_ref2","target","_ref3","onKeyUp","keyCode","DialogActions","Button","onClick","SIGN_IN","gql","_templateObject","SignIn","react_apollo_esm","client","mutation","onCompleted","data","localStorage","setItem","token","resetStore","onError","err","loading","CircularProgress","disableShrink","size","thickness","variant","position","left","marginTop","signOut","removeItem","SignOutButton","marginLeft","SignUpForm","signUp","_React$useState5","_React$useState6","email","setEmail","_ref4","objectSpread","SIGN_UP","SignUp_templateObject","SignUp","DELETE_USER","DeleteUser_templateObject","DeleteUser","user","deleted","console","log","deleteUser","disabled","EditUserForm","editUser","disablePortal","EDIT_USER","EditUser_templateObject","EditUser","Navbar","_useState","_useState2","openIn","setOpenIn","_useState3","_useState4","openUp","setOpenUp","_useState5","_useState6","openEdit","setOpenEdit","CssBaseline","AppBar","backgroundColor","blue","Toolbar","Grid","container","spacing","alignItems","alignContent","justify","item","Typography","align","xs","sm","textTransform","bookCount","ListSelect","selectedValue","handleChange","RadioGroup","justifyContent","aria-label","row","FormControlLabel","control","Radio","checked","label","labelPlacement","GET_USERS","UsersTable_templateObject","UsersTable","tableOptions","pageSize","pageSizeOptions","search","query","Users","dist_default","title","columns","field","defaultSort","options","useStyles","makeStyles","theme","palette","primary","light","icon","opacity","marginRight","display","InfoSnackbar","info","classes","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","className","aria-describedby","Info","msg","action","IconButton","key","Close","REMOVE_BOOK","RemoveBookFromList_templateObject","RemoveBookFromList","setInfo","removeBook","bookId","refetchQueries","GET_ME","ListTable","props","info1","setInfo1","assign","actions","iconProps","tooltip","event","book","concat","ADD_RATING","AddRating_templateObject","AddRating","anchorEl","setAnchorEl","addRating","rating","Menu","keepMounted","Boolean","MenuItem","CreateBookForm","createBook","setTitle","author","setAuthor","setRating","inputProps","min","max","GET_BOOKS","CREATE_BOOK","CreateBook_templateObject","CreateBook","ADD_BOOK_TO_LIST","AddBookToList_templateObject","AddBookToList","addBookToList","AllBooksTable","setWarning","useContext","WarningContext","setBookId","setOpen","_useState7","_useState8","books","map","b","includes","reload","currentTarget","handleRating","fontSize","isFreeAction","Data_templateObject","_root","_users","root","width","defineProperty","breakpoints","down","users","table","minWidth","cell","Data","setSelectedValue","actionsColumnIndex","grouping","headerStyle","cellStyle","editable","bookArr","Books","toConsumableArray","gutterBottom","Paper","dark","Warning","_useContext","warning","Error","createContext","App_templateObject","httpLink","createHttpLink","uri","authLink","setContext","_","headers","getItem","Authentication","errorLink","graphQLErrors","networkError","forEach","locations","path","statusCode","ApolloClient","link","cache","InMemoryCache","paddingTop","progres","ReactDOM","render","fetchPolicy","Provider","Me","Container","document","getElementById"],"mappings":"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","file":"static/js/main.dd41564e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\n\r\nexport default ({ open, handleClose, signIn, error }) => {\r\n  const [username, setUsername] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  const handleSignin = () => signIn({ variables: { username, password } });\r\n\r\n  if (error) {\r\n    const e = error.message.split(':');\r\n    error = e[e.length - 1];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"signin-form\">\r\n        <DialogTitle id=\"signin-form\">Sign in</DialogTitle>\r\n        {error && (\r\n          <DialogContent>\r\n            <p style={{ color: 'red', margin: 0, padding: 0 }}>{error}</p>\r\n          </DialogContent>\r\n        )}\r\n        <form>\r\n          <DialogContent>\r\n            <InputLabel htmlFor=\"username\" shrink>\r\n              Username\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"username\"\r\n              name=\"Username\"\r\n              type=\"text\"\r\n              value={username}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"username\"\r\n              onChange={({ target: { value } }) => setUsername(value)}\r\n            />\r\n            <InputLabel htmlFor=\"password\" shrink>\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              name=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"current-password\"\r\n              onChange={({ target: { value } }) => setPassword(value)}\r\n              onKeyUp={e => {\r\n                if (e.keyCode === 13) handleSignin();\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleSignin} color=\"primary\">\r\n              Sign in\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation, ApolloConsumer } from 'react-apollo';\r\nimport SignInForm from './SignInForm';\r\n\r\nconst SIGN_IN = gql`\r\n  mutation signIn($username: String!, $password: String!) {\r\n    signIn(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ open, handleClose }) => {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => {\r\n        return (\r\n          <Mutation\r\n            mutation={SIGN_IN}\r\n            onCompleted={data => {\r\n              handleClose();\r\n              localStorage.setItem('x-token', data.signIn.token);\r\n              client.resetStore();\r\n            }}\r\n            onError={err => {}}\r\n          >\r\n            {(signIn, { loading, error }) => {\r\n              if (loading)\r\n                return (\r\n                  <CircularProgress\r\n                    disableShrink\r\n                    size={30}\r\n                    thickness={2}\r\n                    variant=\"indeterminate\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      left: '50%',\r\n                      marginTop: '5rem'\r\n                    }}\r\n                  />\r\n                );\r\n\r\n              return (\r\n                <SignInForm\r\n                  open={open}\r\n                  handleClose={handleClose}\r\n                  signIn={signIn}\r\n                  error={error}\r\n                />\r\n              );\r\n            }}\r\n          </Mutation>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst signOut = client => {\r\n  localStorage.removeItem('x-token');\r\n  client.resetStore();\r\n};\r\n\r\nexport { signOut };\r\n\r\nexport default () => {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => (\r\n        <Button\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          style={{ marginLeft: 'auto' }}\r\n          onClick={() => signOut(client)}\r\n        >\r\n          Sign out\r\n        </Button>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\n\r\nexport default ({ open, handleClose, signUp, error }) => {\r\n  const [username, setUsername] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [email, setEmail] = React.useState('');\r\n\r\n  const handleSignUp = () => {\r\n    let variables = { username, password };\r\n    if (email) variables = { ...variables, email };\r\n    signUp({ variables });\r\n  };\r\n\r\n  if (error) {\r\n    const e = error.message.split(':');\r\n    error = e[e.length - 1];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"signup-form\">\r\n        <DialogTitle id=\"signup-form\">Sign Up</DialogTitle>\r\n        {error && (\r\n          <DialogContent>\r\n            <p style={{ color: 'red', margin: 0, padding: 0 }}>{error}</p>\r\n          </DialogContent>\r\n        )}\r\n        <form>\r\n          <DialogContent>\r\n            <InputLabel htmlFor=\"username\" shrink>\r\n              Username\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"username\"\r\n              name=\"Username\"\r\n              type=\"text\"\r\n              value={username}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"username\"\r\n              onChange={({ target: { value } }) => setUsername(value)}\r\n            />\r\n            <InputLabel htmlFor=\"password\" shrink>\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              name=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"new-password\"\r\n              onChange={({ target: { value } }) => setPassword(value)}\r\n            />\r\n            <InputLabel htmlFor=\"email\" shrink>\r\n              Email\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              margin=\"dense\"\r\n              id=\"email\"\r\n              name=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              fullWidth\r\n              onChange={({ target: { value } }) => setEmail(value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleSignUp} color=\"primary\">\r\n              Sign UP\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation, ApolloConsumer } from 'react-apollo';\r\nimport SignUpForm from './SignUpForm';\r\n\r\nconst SIGN_UP = gql`\r\n  mutation signUp($username: String!, $password: String!, $email: String) {\r\n    signUp(\r\n      userInput: { username: $username, password: $password, email: $email }\r\n    ) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ open, handleClose }) => {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => {\r\n        return (\r\n          <Mutation\r\n            mutation={SIGN_UP}\r\n            onCompleted={data => {\r\n              handleClose();\r\n              localStorage.setItem('x-token', data.signUp.token);\r\n              client.resetStore();\r\n            }}\r\n            onError={err => {}}\r\n          >\r\n            {(signUp, { loading, error }) => {\r\n              if (loading)\r\n                return (\r\n                  <CircularProgress\r\n                    disableShrink\r\n                    size={40}\r\n                    thickness={2}\r\n                    variant=\"indeterminate\"\r\n                    style={{\r\n                      position: 'relative',\r\n                      left: '50%',\r\n                      marginTop: '5rem'\r\n                    }}\r\n                  />\r\n                );\r\n\r\n              return (\r\n                <SignUpForm\r\n                  open={open}\r\n                  handleClose={handleClose}\r\n                  signUp={signUp}\r\n                  error={error}\r\n                />\r\n              );\r\n            }}\r\n          </Mutation>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation, ApolloConsumer } from 'react-apollo';\r\nimport { signOut } from './SignOutButton';\r\n\r\nconst DELETE_USER = gql`\r\n  mutation deleteUser {\r\n    deleteUser\r\n  }\r\n`;\r\n\r\nexport default ({ user, handleClose }) => {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => {\r\n        return (\r\n          <Mutation\r\n            mutation={DELETE_USER}\r\n            onCompleted={deleted => {\r\n              if (deleted) {\r\n                handleClose();\r\n                signOut(client);\r\n              }\r\n            }}\r\n            onError={err => console.log(err)}\r\n          >\r\n            {(deleteUser, { loading, error }) => {\r\n              if (loading)\r\n                return (\r\n                  <CircularProgress\r\n                    disableShrink\r\n                    size={40}\r\n                    thickness={2}\r\n                    variant=\"indeterminate\"\r\n                    style={{\r\n                      position: 'relative',\r\n                      left: '50%',\r\n                      marginTop: '5rem'\r\n                    }}\r\n                  />\r\n                );\r\n\r\n              if (error) console.log(error);\r\n\r\n              return (\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={deleteUser}\r\n                  disabled={user.username === 'test'}\r\n                >\r\n                  DELETE USER\r\n                </Button>\r\n              );\r\n            }}\r\n          </Mutation>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\nimport DeleteUser from './DeleteUser';\r\n\r\nexport default ({ user, open, handleClose, editUser, error }) => {\r\n  const [username, setUsername] = React.useState(user.username);\r\n  const [password, setPassword] = React.useState('');\r\n  const [email, setEmail] = React.useState(user.email || '');\r\n\r\n  const handleEdit = () => {\r\n    let variables = { username, password };\r\n    if (email) variables = { ...variables, email };\r\n    editUser({ variables });\r\n  };\r\n\r\n  if (error) {\r\n    const e = error.message.split(':');\r\n    error = e[e.length - 1];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"edituser-form\"\r\n        disablePortal\r\n      >\r\n        <DialogTitle id=\"edituser-form\">Edit user data</DialogTitle>\r\n        {error && (\r\n          <DialogContent>\r\n            <p style={{ color: 'red', margin: 0, padding: 0 }}>{error}</p>\r\n          </DialogContent>\r\n        )}\r\n        <form>\r\n          <DialogContent>\r\n            <InputLabel htmlFor=\"username\" shrink>\r\n              New username\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"username\"\r\n              name=\"Username\"\r\n              type=\"text\"\r\n              value={username}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"username\"\r\n              onChange={({ target: { value } }) => setUsername(value)}\r\n            />\r\n            <InputLabel htmlFor=\"password\" shrink>\r\n              New password or confirm old password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              name=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"new-password\"\r\n              onChange={({ target: { value } }) => setPassword(value)}\r\n            />\r\n            <InputLabel htmlFor=\"email\" shrink>\r\n              New email\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              margin=\"dense\"\r\n              id=\"email\"\r\n              name=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              fullWidth\r\n              onChange={({ target: { value } }) => setEmail(value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <DeleteUser handleClose={handleClose} user={user} />\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleEdit}\r\n              color=\"primary\"\r\n              disabled={user.username === 'test'}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation, ApolloConsumer } from 'react-apollo';\r\nimport EditUserForm from './EditUserForm';\r\n\r\nconst EDIT_USER = gql`\r\n  mutation editUser($username: String!, $password: String!, $email: String) {\r\n    editUser(\r\n      userInput: { username: $username, password: $password, email: $email }\r\n    ) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ user, open, handleClose }) => {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => {\r\n        return (\r\n          <Mutation\r\n            mutation={EDIT_USER}\r\n            onCompleted={data => {\r\n              handleClose();\r\n              localStorage.setItem('x-token', data.editUser.token);\r\n              client.resetStore();\r\n            }}\r\n            onError={err => console.log(err)}\r\n          >\r\n            {(editUser, { loading, error }) => {\r\n              if (loading)\r\n                return (\r\n                  <CircularProgress\r\n                    disableShrink\r\n                    size={40}\r\n                    thickness={2}\r\n                    variant=\"indeterminate\"\r\n                    style={{\r\n                      position: 'relative',\r\n                      left: '50%',\r\n                      marginTop: '5rem'\r\n                    }}\r\n                  />\r\n                );\r\n\r\n              if (error) console.log(error);\r\n\r\n              return (\r\n                <EditUserForm\r\n                  user={user}\r\n                  open={open}\r\n                  handleClose={handleClose}\r\n                  editUser={editUser}\r\n                  error={error}\r\n                />\r\n              );\r\n            }}\r\n          </Mutation>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport SignIn from './SignIn';\r\nimport SignOutButton from './SignOutButton';\r\nimport SignUp from './SignUp';\r\nimport EditUser from './EditUser';\r\n\r\n// =================================================================\r\nexport default ({ user }) => {\r\n  const [openIn, setOpenIn] = useState(false);\r\n  const [openUp, setOpenUp] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleSignIn = () => {\r\n    setOpenIn(true);\r\n  };\r\n\r\n  const handleCloseIn = () => setOpenIn(false);\r\n\r\n  const handleSignUp = () => {\r\n    setOpenUp(true);\r\n  };\r\n\r\n  const handleCloseUp = () => setOpenUp(false);\r\n\r\n  const handleEdit = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => setOpenEdit(false);\r\n\r\n  const name = user ? user.username : null;\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar\r\n        id=\"nav-bar\"\r\n        position=\"fixed\"\r\n        style={{ backgroundColor: blue[300], padding: '0.375rem 0' }}\r\n      >\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n            justify=\"space-around\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h6\" align=\"center\">\r\n                Book reading list app\r\n              </Typography>\r\n            </Grid>\r\n            {name && (\r\n              <>\r\n                <Grid item xs={12} sm=\"auto\">\r\n                  <EditUser\r\n                    user={user}\r\n                    open={openEdit}\r\n                    handleClose={handleCloseEdit}\r\n                  />\r\n                  <Typography variant=\"body2\" align=\"center\">\r\n                    Username:{' '}\r\n                    {\r\n                      <>\r\n                        <Button\r\n                          style={{ textTransform: 'none' }}\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          onClick={handleEdit}\r\n                        >\r\n                          {name}\r\n                        </Button>\r\n                      </>\r\n                    }{' '}\r\n                    {user.bookCount} books on Your list\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <SignOutButton />\r\n                </Grid>\r\n              </>\r\n            )}\r\n            {!name && (\r\n              <>\r\n                <Grid item>\r\n                  <SignIn open={openIn} handleClose={handleCloseIn} />\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"outlined\"\r\n                    onClick={handleSignIn}\r\n                    style={{ margin: '0 0.5rem' }}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                  <SignUp open={openUp} handleClose={handleCloseUp} />\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    onClick={handleSignUp}\r\n                    style={{ margin: '0 0.5rem' }}\r\n                  >\r\n                    Sign UP\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Radio, RadioGroup, FormControlLabel } from '@material-ui/core';\r\n\r\n// =================================================================\r\nexport default ({ selectedValue, handleChange }) => {\r\n  return (\r\n    <>\r\n      <RadioGroup\r\n        style={{ justifyContent: 'center', marginTop: '2rem' }}\r\n        aria-label=\"select\"\r\n        name=\"select\"\r\n        value={selectedValue}\r\n        onChange={handleChange}\r\n        row\r\n      >\r\n        <FormControlLabel\r\n          style={{ margin: '0rem 1rem 0rem 2rem' }}\r\n          value=\"users\"\r\n          control={\r\n            <Radio\r\n              color=\"primary\"\r\n              checked={selectedValue === 'users'}\r\n              name=\"users\"\r\n            />\r\n          }\r\n          label=\"Users\"\r\n          labelPlacement=\"end\"\r\n        />\r\n        <FormControlLabel\r\n          style={{ margin: '0rem 1rem 0rem 2rem' }}\r\n          value=\"all\"\r\n          control={\r\n            <Radio\r\n              color=\"primary\"\r\n              checked={selectedValue === 'all'}\r\n              name=\"all\"\r\n            />\r\n          }\r\n          label=\"Books\"\r\n          labelPlacement=\"end\"\r\n        />\r\n        <FormControlLabel\r\n          style={{ margin: '0rem 1rem 0rem 2rem' }}\r\n          value=\"list\"\r\n          control={\r\n            <Radio\r\n              color=\"primary\"\r\n              checked={selectedValue === 'list'}\r\n              name=\"list\"\r\n            />\r\n          }\r\n          label=\"Your reading list\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </RadioGroup>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\n// import Warning from './Warning';\r\n\r\nconst GET_USERS = gql`\r\n  {\r\n    Users {\r\n      id\r\n      username\r\n      bookCount\r\n    }\r\n  }\r\n`;\r\n\r\n// =================================================================\r\nexport default () => {\r\n  const tableOptions = {\r\n    pageSize: 10,\r\n    pageSizeOptions: [5, 10],\r\n    padding: 'dense',\r\n    search: false\r\n  };\r\n\r\n  return (\r\n    <Query query={GET_USERS}>\r\n      {({ loading, error, data }) => {\r\n        if (loading)\r\n          return (\r\n            <CircularProgress\r\n              disableShrink\r\n              size={50}\r\n              thickness={3}\r\n              variant=\"indeterminate\"\r\n              style={{\r\n                position: 'relative',\r\n                left: '50%',\r\n                marginTop: '5rem'\r\n              }}\r\n            />\r\n          );\r\n\r\n        if (error) console.log(error.message);\r\n\r\n        return (\r\n          <>\r\n            {data.Users && (\r\n              <MaterialTable\r\n                title=\"All registered users\"\r\n                columns={[\r\n                  { title: 'Username', field: 'username', defaultSort: 'asc' },\r\n                  { title: 'Book count', field: 'bookCount', type: 'numeric' }\r\n                ]}\r\n                data={data.Users}\r\n                options={tableOptions}\r\n              />\r\n            )}\r\n          </>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Info, Close } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    marginTop: '8rem'\r\n  },\r\n  icon: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\n// =================================================================\r\nexport default ({ info, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center'\r\n      }}\r\n      open={info.open}\r\n      autoHideDuration={1000}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarContent\r\n        className={classes.error}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"info-snackbar\" className={classes.message}>\r\n            <Info className={classes.icon} />\r\n            {info.msg}\r\n          </span>\r\n        }\r\n        action={\r\n          <IconButton key=\"close\" color=\"inherit\" onClick={handleClose}>\r\n            <Close />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GET_ME } from '../App';\r\nimport InfoSnackbar from './InfoSnackbar';\r\n\r\nconst REMOVE_BOOK = gql`\r\n  mutation removeBookFromList($bookId: ID!) {\r\n    removeBookFromList(bookId: $bookId) {\r\n      id\r\n      avgRating\r\n      readCount\r\n    }\r\n  }\r\n`;\r\n\r\n// =================================================================\r\nexport default ({ info, setInfo }) => {\r\n  return (\r\n    <Mutation mutation={REMOVE_BOOK}>\r\n      {(removeBook, { loading, error }) => {\r\n        const handleClose = () => {\r\n          removeBook({\r\n            variables: { bookId: info.bookId },\r\n            refetchQueries: [{ query: GET_ME }]\r\n          });\r\n\r\n          setInfo({ open: false, msg: '', bookId: 0 });\r\n        };\r\n\r\n        if (loading)\r\n          return (\r\n            <CircularProgress\r\n              disableShrink\r\n              size={40}\r\n              thickness={3}\r\n              variant=\"indeterminate\"\r\n              style={{\r\n                position: 'relative',\r\n                left: '50%',\r\n                marginTop: '8rem'\r\n              }}\r\n            />\r\n          );\r\n\r\n        if (error) {\r\n          console.log('REMOVEBOOKFROMLIST ERROR OBJECT ');\r\n          console.log(error);\r\n        }\r\n\r\n        return <InfoSnackbar info={info} handleClose={handleClose} />;\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport RemoveBookFromList from './RemoveBookFromList';\r\n\r\n// =================================================================\r\nexport default props => {\r\n  const [info1, setInfo1] = useState({ open: false, msg: '', bookId: 0 });\r\n  return (\r\n    <>\r\n      <MaterialTable\r\n        {...props}\r\n        actions={[\r\n          {\r\n            icon: 'delete',\r\n            iconProps: { style: { color: 'red' } },\r\n            tooltip: 'Remove book from list',\r\n            onClick: (event, book) => {\r\n              setInfo1({\r\n                open: true,\r\n                msg: `${book.title} removed from Your list`,\r\n                bookId: book.id\r\n              });\r\n            }\r\n          }\r\n        ]}\r\n      />\r\n      <RemoveBookFromList info={info1} setInfo={setInfo1} />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\nimport { Menu, MenuItem, CircularProgress } from '@material-ui/core';\r\n\r\nconst ADD_RATING = gql`\r\n  mutation addRating($bookId: ID!, $rating: Int!) {\r\n    addRating(id: $bookId, rating: $rating) {\r\n      id\r\n      title\r\n      author\r\n      avgRating\r\n      readCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ bookId, anchorEl, setAnchorEl }) => {\r\n  return (\r\n    <Mutation mutation={ADD_RATING}>\r\n      {(addRating, { loading, error }) => {\r\n        const handleClose = event => {\r\n          if (event.target.value) {\r\n            addRating({ variables: { bookId, rating: event.target.value } });\r\n          }\r\n          setAnchorEl(null);\r\n        };\r\n\r\n        if (loading)\r\n          return (\r\n            <CircularProgress\r\n              disableShrink\r\n              size={30}\r\n              thickness={2}\r\n              variant=\"indeterminate\"\r\n              style={{\r\n                position: 'relative',\r\n                left: '50%',\r\n                marginTop: '8rem'\r\n              }}\r\n            />\r\n          );\r\n\r\n        if (error) console.log(error);\r\n\r\n        return (\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose} value={1}>\r\n              1\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} value={2}>\r\n              2\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} value={3}>\r\n              3\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} value={4}>\r\n              4\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} value={5}>\r\n              5\r\n            </MenuItem>\r\n          </Menu>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\nimport { GET_BOOKS } from './Data';\r\n\r\nexport default ({ open, handleClose, createBook, error }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [rating, setRating] = useState(1);\r\n\r\n  const handleCreateBook = () => {\r\n    let variables = { title, author, rating: +rating };\r\n    createBook({\r\n      variables,\r\n      refetchQueries: [{ query: GET_BOOKS }]\r\n    });\r\n  };\r\n\r\n  if (error) {\r\n    // console.log(error);\r\n    const e = error.message.split(':');\r\n    error = e[e.length - 1];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"create-book-form\"\r\n        disablePortal\r\n      >\r\n        <DialogTitle id=\"create-book-form\">Add Book</DialogTitle>\r\n        {error && (\r\n          <DialogContent>\r\n            <p style={{ color: 'red', margin: 0, padding: 0 }}>{error}</p>\r\n          </DialogContent>\r\n        )}\r\n        <form>\r\n          <DialogContent>\r\n            <InputLabel htmlFor=\"title\" shrink>\r\n              Title\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={title}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"title\"\r\n              onChange={({ target: { value } }) => setTitle(value)}\r\n            />\r\n            <InputLabel htmlFor=\"author\" shrink>\r\n              Author\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              style={{ marginBottom: '1rem' }}\r\n              margin=\"dense\"\r\n              id=\"author\"\r\n              name=\"author\"\r\n              type=\"text\"\r\n              value={author}\r\n              fullWidth\r\n              required\r\n              autoComplete=\"new-author\"\r\n              onChange={({ target: { value } }) => setAuthor(value)}\r\n            />\r\n            <InputLabel htmlFor=\"rating\" shrink>\r\n              Rating\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              margin=\"dense\"\r\n              id=\"rating\"\r\n              name=\"rating\"\r\n              type=\"number\"\r\n              inputProps={{ min: 1, max: 5 }}\r\n              value={rating}\r\n              fullWidth\r\n              required\r\n              onChange={({ target: { value } }) => setRating(value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleCreateBook} color=\"primary\">\r\n              Save Book\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation, ApolloConsumer } from 'react-apollo';\r\nimport CreateBookForm from './CreateBookForm';\r\n\r\nconst CREATE_BOOK = gql`\r\n  mutation createBook($title: String!, $author: String!, $rating: Int!) {\r\n    createBook(bookInput: { title: $title, author: $author, rating: $rating }) {\r\n      id\r\n      title\r\n      author\r\n      avgRating\r\n      readCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ open, handleClose }) => {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => {\r\n        return (\r\n          <Mutation\r\n            mutation={CREATE_BOOK}\r\n            onCompleted={handleClose}\r\n            onError={() => {}}\r\n          >\r\n            {(createBook, { loading, error }) => {\r\n              if (loading)\r\n                return (\r\n                  <CircularProgress\r\n                    disableShrink\r\n                    size={40}\r\n                    thickness={2}\r\n                    variant=\"indeterminate\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      left: '50%',\r\n                      marginTop: '5rem'\r\n                    }}\r\n                  />\r\n                );\r\n\r\n              if (error) console.log(error);\r\n\r\n              return (\r\n                <CreateBookForm\r\n                  open={open}\r\n                  handleClose={handleClose}\r\n                  createBook={createBook}\r\n                  error={error}\r\n                />\r\n              );\r\n            }}\r\n          </Mutation>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GET_ME } from '../App';\r\nimport InfoSnackbar from './InfoSnackbar';\r\n\r\nconst ADD_BOOK_TO_LIST = gql`\r\n  mutation addBookToList($bookId: ID!) {\r\n    addBookToList(bookId: $bookId) {\r\n      id\r\n      avgRating\r\n      readCount\r\n    }\r\n  }\r\n`;\r\n\r\n// =================================================================\r\nexport default ({ info, setInfo }) => {\r\n  return (\r\n    <Mutation mutation={ADD_BOOK_TO_LIST}>\r\n      {(addBookToList, { loading, error }) => {\r\n        const handleClose = () => {\r\n          addBookToList({\r\n            variables: { bookId: info.bookId },\r\n            refetchQueries: [{ query: GET_ME }]\r\n          });\r\n\r\n          setInfo({ open: false, msg: '', bookId: 0 });\r\n        };\r\n\r\n        if (loading)\r\n          return (\r\n            <CircularProgress\r\n              disableShrink\r\n              size={40}\r\n              thickness={3}\r\n              variant=\"indeterminate\"\r\n              style={{\r\n                position: 'relative',\r\n                left: '50%',\r\n                marginTop: '8rem'\r\n              }}\r\n            />\r\n          );\r\n\r\n        if (error) {\r\n          console.log('ADDBOOKTOLIST ERROR OBJECT ');\r\n          console.log(error);\r\n        }\r\n\r\n        return <InfoSnackbar info={info} handleClose={handleClose} />;\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { WarningContext } from '../App';\r\nimport AddRating from './AddRating';\r\nimport CreateBook from './CreateBook';\r\nimport AddBookToList from './AddBookToList';\r\n\r\n// =================================================================\r\nexport default props => {\r\n  const { setWarning } = useContext(WarningContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [bookId, setBookId] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [info, setInfo] = useState({ open: false, msg: '', bookId: 0 });\r\n\r\n  const handleCreateBook = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleRating = (e, book) => {\r\n    setBookId(book.id);\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const {\r\n    user: { books }\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <MaterialTable\r\n        {...props}\r\n        actions={[\r\n          {\r\n            icon: 'add',\r\n            tooltip: 'Add book to reading list',\r\n            onClick: (event, book) => {\r\n              if (!books.map(b => b.id).includes(book.id)) {\r\n                setInfo({\r\n                  open: true,\r\n                  msg: `${book.title} added to Your list`,\r\n                  bookId: book.id\r\n                });\r\n              } else {\r\n                setWarning({\r\n                  open: true,\r\n                  msg: 'Already on list',\r\n                  reload: false\r\n                });\r\n              }\r\n            }\r\n          },\r\n          {\r\n            icon: 'star_rate',\r\n            iconProps: { style: { color: 'orange' } },\r\n            tooltip: 'Rate book',\r\n            onClick: (e, book) => handleRating(e, book)\r\n          },\r\n          {\r\n            icon: 'add_circle',\r\n            iconProps: { color: 'primary', style: { fontSize: 30 } },\r\n            tooltip: 'Add new book to database',\r\n            isFreeAction: true,\r\n            onClick: () => handleCreateBook()\r\n          }\r\n        ]}\r\n      />\r\n      <AddRating\r\n        bookId={bookId}\r\n        anchorEl={anchorEl}\r\n        setAnchorEl={setAnchorEl}\r\n      />\r\n      <CreateBook open={open} handleClose={handleClose} />\r\n      <AddBookToList info={info} setInfo={setInfo} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Typography, Paper, CircularProgress } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSelect from './ListSelect';\r\nimport UsersTable from './UsersTable';\r\nimport ListTable from './ListTable';\r\nimport AllBooksTable from './AllBooksTable';\r\nimport { WarningContext } from '../App';\r\n\r\nexport const GET_BOOKS = gql`\r\n  {\r\n    Books {\r\n      id\r\n      title\r\n      author\r\n      avgRating\r\n      readCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '80%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%'\r\n    },\r\n    height: '90%',\r\n    margin: '2rem auto',\r\n    overflowX: 'auto',\r\n    overflowY: 'auto'\r\n  },\r\n  users: {\r\n    width: '40%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '60%'\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%'\r\n    },\r\n    height: '90%',\r\n    margin: '2rem auto',\r\n    overflowX: 'auto',\r\n    overflowY: 'auto'\r\n  },\r\n  title: { marginTop: '0.5rem' },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  cell: { fontSize: '0.95rem' }\r\n}));\r\n\r\n// =================================================================\r\nexport default ({ user }) => {\r\n  const [selectedValue, setSelectedValue] = React.useState('all');\r\n  const { setWarning } = useContext(WarningContext);\r\n\r\n  const handleChange = event => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const tableOptions = {\r\n    pageSize: 10,\r\n    pageSizeOptions: [5, 10],\r\n    padding: 'dense',\r\n    actionsColumnIndex: -1,\r\n    grouping: false,\r\n    headerStyle: { backgroundColor: 'lightblue' }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'Title', field: 'title', defaultSort: 'asc' },\r\n    { title: 'Author', field: 'author', cellStyle: { padding: 0 } },\r\n    {\r\n      title: 'Rating',\r\n      field: 'avgRating',\r\n      type: 'numeric',\r\n      editable: 'never',\r\n      cellStyle: { padding: 0 }\r\n    },\r\n    {\r\n      title: 'Read count',\r\n      field: 'readCount',\r\n      type: 'numeric',\r\n      editable: 'never'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Query query={GET_BOOKS}>\r\n      {({ loading, error, data }) => {\r\n        let bookArr = data.Books && [...data.Books];\r\n\r\n        if (user) {\r\n          bookArr =\r\n            selectedValue === 'all'\r\n              ? data.Books && [...data.Books]\r\n              : user.books && [...user.books];\r\n        }\r\n\r\n        if (loading)\r\n          return (\r\n            <CircularProgress\r\n              disableShrink\r\n              size={50}\r\n              thickness={3}\r\n              variant=\"indeterminate\"\r\n              style={{\r\n                position: 'relative',\r\n                left: '50%',\r\n                marginTop: '5rem'\r\n              }}\r\n            />\r\n          );\r\n\r\n        if (error) {\r\n          console.log('DATA COMPONENT ERROR  ====  ' + error.message);\r\n          setWarning({ open: true, msg: error.message, reload: false });\r\n        }\r\n\r\n        return (\r\n          <>\r\n            {!user && (\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"body1\"\r\n                align=\"center\"\r\n                gutterBottom\r\n              >\r\n                You can sign in with username: test and password: test\r\n              </Typography>\r\n            )}\r\n            {user && (\r\n              <ListSelect\r\n                selectedValue={selectedValue}\r\n                handleChange={handleChange}\r\n              />\r\n            )}\r\n            <Paper\r\n              className={\r\n                selectedValue === 'users' ? classes.users : classes.root\r\n              }\r\n            >\r\n              {selectedValue === 'users' && <UsersTable />}\r\n              {selectedValue === 'all' && !user && (\r\n                <MaterialTable\r\n                  className={classes.table}\r\n                  title=\"All books in database\"\r\n                  columns={columns}\r\n                  data={bookArr}\r\n                  options={tableOptions}\r\n                />\r\n              )}\r\n              {selectedValue === 'all' && user && (\r\n                <AllBooksTable\r\n                  user={user}\r\n                  className={classes.table}\r\n                  title=\"All books in database\"\r\n                  columns={columns}\r\n                  data={bookArr}\r\n                  options={tableOptions}\r\n                />\r\n              )}\r\n              {selectedValue === 'list' && (\r\n                <ListTable\r\n                  className={classes.table}\r\n                  title={'Your reading list'}\r\n                  columns={columns}\r\n                  data={bookArr}\r\n                  options={tableOptions}\r\n                />\r\n              )}\r\n            </Paper>\r\n          </>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Error, Close } from '@material-ui/icons';\r\nimport { WarningContext } from '../App';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n    marginTop: '8rem'\r\n  },\r\n  icon: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\n// =================================================================\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const { warning, setWarning } = useContext(WarningContext);\r\n\r\n  const handleClose = client => {\r\n    if (warning.reload) {\r\n      setWarning({ open: false, msg: '', reload: false });\r\n      client.resetStore();\r\n    } else {\r\n      setWarning({ open: false, msg: '', reload: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => (\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center'\r\n          }}\r\n          open={warning.open}\r\n          autoHideDuration={2000}\r\n          onClose={() => handleClose(client)}\r\n        >\r\n          <SnackbarContent\r\n            className={classes.error}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n              <span id=\"client-snackbar\" className={classes.message}>\r\n                <Error className={classes.icon} />\r\n                {warning.msg}\r\n              </span>\r\n            }\r\n            action={\r\n              <IconButton\r\n                key=\"close\"\r\n                color=\"inherit\"\r\n                onClick={() => handleClose(client)}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            }\r\n          />\r\n        </Snackbar>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n","import React, { createContext, useState } from 'react';\r\nimport { Container, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ApolloClient from 'apollo-client';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { Query } from 'react-apollo';\r\nimport { onError } from 'apollo-link-error';\r\nimport gql from 'graphql-tag';\r\nimport Navbar from './components/Navbar';\r\nimport Data from './components/Data';\r\nimport Warning from './components/Warning';\r\nimport { signOut } from './components/SignOutButton';\r\n\r\nexport const WarningContext = createContext(null);\r\n\r\nconst GET_ME = gql`\r\n  {\r\n    Me {\r\n      id\r\n      username\r\n      email\r\n      bookCount\r\n      books {\r\n        id\r\n        title\r\n        author\r\n        avgRating\r\n        readCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ME };\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql'\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('x-token');\r\n\r\n  if (token) {\r\n    headers = { ...headers, Authentication: 'Bearer ' + token };\r\n  }\r\n  return { headers };\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.forEach(({ message, locations, path }) => {\r\n      console.log('GraphQL error', message);\r\n\r\n      if (message.split(':')[1] === 'Session expired, sign in again.') {\r\n        signOut(client);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (networkError) {\r\n    console.log('Network error', networkError);\r\n\r\n    if (networkError.statusCode === 400) {\r\n      signOut(client);\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: errorLink.concat(authLink.concat(httpLink)),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: '8rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: '2rem 0'\r\n    }\r\n  },\r\n  progres: { position: 'relative', left: '50%', marginTop: '5rem' }\r\n}));\r\n\r\n// =================================================================\r\nexport default () => {\r\n  const [warning, setWarning] = useState({\r\n    open: false,\r\n    msg: '',\r\n    reload: false\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Query query={GET_ME} fetchPolicy=\"cache-and-network\">\r\n        {({ loading, error, data }) => {\r\n          if (loading)\r\n            return (\r\n              <CircularProgress\r\n                disableShrink\r\n                size={50}\r\n                thickness={3}\r\n                variant=\"indeterminate\"\r\n                className={classes.progres}\r\n              />\r\n            );\r\n\r\n          if (error) {\r\n            console.log('APP COMPONENT ERROR   ====  ');\r\n            console.log(error);\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <WarningContext.Provider value={{ warning, setWarning }}>\r\n                <Warning />\r\n                {data && (\r\n                  <>\r\n                    <Navbar user={data.Me} />\r\n                    <Container className={classes.root}>\r\n                      <Data user={data.Me} />\r\n                    </Container>\r\n                  </>\r\n                )}\r\n              </WarningContext.Provider>\r\n            </>\r\n          );\r\n        }}\r\n      </Query>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}